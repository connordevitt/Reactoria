{"version":3,"file":"static/js/516.fc5202d1.chunk.js","mappings":"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","sources":["components/standings.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst teamURLS = {\r\n  \"New York Yankees\": \"https://www.mlb.com/yankees/\",\r\n  \"Boston Red Sox\": \"https://www.mlb.com/redsox/\",\r\n  \"Tampa Bay Rays\": \"https://www.mlb.com/rays/\",\r\n  \"Toronto Blue Jays\": \"https://www.mlb.com/bluejays/\",\r\n  \"Baltimore Orioles\": \"https://www.mlb.com/orioles/\",\r\n  \"Cleveland Guardians\": \"https://www.mlb.com/guardians/\",\r\n  \"Detroit Tigers\": \"https://www.mlb.com/tigers/\",\r\n  \"Kansas City Royals\": \"https://www.mlb.com/royals/\",\r\n  \"Minnesota Twins\": \"https://www.mlb.com/twins/\",\r\n  \"Chicago White Sox\": \"https://www.mlb.com/whitesox/\",\r\n  \"Seattle Mariners\": \"https://www.mlb.com/mariners/\",\r\n  \"Houston Astros\": \"https://www.mlb.com/astros/\",\r\n  \"Los Angeles Angels\": \"https://www.mlb.com/angels/\",\r\n  \"Texas Rangers\": \"https://www.mlb.com/rangers/\",\r\n  \"Athletics\": \"https://www.mlb.com/athletics/\",\r\n  \"St. Louis Cardinals\": \"https://www.mlb.com/cardinals/\",\r\n  \"Milwaukee Brewers\": \"https://www.mlb.com/brewers/\",\r\n  \"Chicago Cubs\": \"https://www.mlb.com/cubs/\",\r\n  \"Cincinnati Reds\": \"https://www.mlb.com/reds/\",\r\n  \"Pittsburgh Pirates\": \"https://www.mlb.com/pirates/\",\r\n  \"Miami Marlins\": \"https://www.mlb.com/marlins/\",\r\n  \"Washington Nationals\": \"https://www.mlb.com/nationals/\",\r\n  \"Atlanta Braves\": \"https://www.mlb.com/braves/\",\r\n  \"New York Mets\": \"https://www.mlb.com/mets/\",\r\n  \"Philadelphia Phillies\": \"https://www.mlb.com/phillies/\",\r\n  \"San Diego Padres\": \"https://www.mlb.com/padres/\",\r\n  \"Colorado Rockies\": \"https://www.mlb.com/rockies/\",\r\n  \"San Francisco Giants\": \"https://www.mlb.com/giants/\",\r\n  \"Los Angeles Dodgers\": \"https://www.mlb.com/dodgers/\",\r\n  \"Arizona Diamondbacks\": \"https://www.mlb.com/diamondbacks/\",\r\n};\r\n\r\n// Go Yankees!\r\nconst divisionTeams = {\r\n  \"AL Central\": [\r\n    \"Cleveland Guardians\",\r\n    \"Detroit Tigers\",\r\n    \"Kansas City Royals\",\r\n    \"Minnesota Twins\",\r\n    \"Chicago White Sox\",\r\n  ],\r\n  \"AL East\": [\r\n    \"Tampa Bay Rays\",\r\n    \"Toronto Blue Jays\",\r\n    \"Baltimore Orioles\",\r\n    \"New York Yankees\",\r\n    \"Boston Red Sox\",\r\n  ],\r\n  \"AL West\": [\r\n    \"Seattle Mariners\",\r\n    \"Houston Astros\",\r\n    \"Los Angeles Angels\",\r\n    \"Texas Rangers\",\r\n    \"Oakland Athletics\",\r\n  ],\r\n  \"NL Central\": [\r\n    \"St. Louis Cardinals\",\r\n    \"Milwaukee Brewers\",\r\n    \"Chicago Cubs\",\r\n    \"Cincinnati Reds\",\r\n    \"Pittsburgh Pirates\",\r\n  ],\r\n  \"NL East\": [\r\n    \"Miami Marlins\",\r\n    \"Washington Nationals\",\r\n    \"Atlanta Braves\",\r\n    \"New York Mets\",\r\n    \"Philadelphia Phillies\",\r\n  ],\r\n  \"NL West\": [\r\n    \"San Diego Padres\",\r\n    \"Colorado Rockies\",\r\n    \"San Francisco Giants\",\r\n    \"Los Angeles Dodgers\",\r\n    \"Arizona Diamondbacks\",\r\n  ],\r\n};\r\n\r\nconst Standings = () => {\r\n  const navigate = useNavigate();\r\n  const [alStandings, setALStandings] = useState([]);\r\n  const [nlStandings, setNLStandings] = useState([]);\r\n  const [view, setView] = useState(() => localStorage.getItem(\"standingsView\") || \"League\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  /* const divisionNameMap = {\r\n    \"AL Central\": \"American League Central\",\r\n    \"AL East\": \"American League East\",\r\n    \"AL West\": \"American League West\",\r\n    \"NL Central\": \"National League Central\",\r\n    \"NL East\": \"National League East\",\r\n    \"NL West\": \"National League West\",\r\n  };\r\n  */\r\n  useEffect(() => {\r\n    const fetchStandings = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://statsapi.mlb.com/api/v1/standings?leagueId=103\"\r\n        );\r\n        setALStandings(response.data.records);\r\n\r\n        const nlResponse = await axios.get(\r\n          \"https://statsapi.mlb.com/api/v1/standings?leagueId=104\"\r\n        );\r\n        setNLStandings(nlResponse.data.records);\r\n      } catch (error) {\r\n        console.error(\"Error fetching standings:\", error);\r\n      }\r\n    };\r\n\r\n    fetchStandings();\r\n  }, []);\r\n\r\n  const handleSetView = (newView) => {\r\n    setView(newView);\r\n    localStorage.setItem('standingsView', newView);\r\n  }\r\n\r\n  const sortLeagueStandings = (standings) => {\r\n    return standings\r\n      .flatMap((division) => {\r\n        if (!Array.isArray(division.teamRecords)) {\r\n          console.warn(\r\n            \"Missing or invalid teamRecords for division:\",\r\n            division\r\n          );\r\n          return [];\r\n        }\r\n        return division.teamRecords;\r\n      })\r\n      .sort(\r\n        (a, b) =>\r\n          parseFloat(b.winningPercentage) - parseFloat(a.winningPercentage)\r\n      );\r\n  };\r\n\r\n  const getDivisionStandings = (standings, divisionName) => {\r\n    const teamsInDivision = divisionTeams[divisionName];\r\n    return standings.flatMap((division) => {\r\n      if (!Array.isArray(division.teamRecords)) {\r\n        console.warn(\"Missing or invalid teamRecords for division:\", division);\r\n        return [];\r\n      }\r\n      return division.teamRecords.filter((teamRecord) =>\r\n        teamsInDivision.includes(teamRecord.team?.name)\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderLeagueTable = (standings) => {\r\n    const sortedStandings = sortLeagueStandings(standings);\r\n\r\n    if (!sortedStandings || sortedStandings.length === 0) {\r\n      return (\r\n        <p className=\"text-center text-white\">No standings data available</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"Team-name\">Team</th>\r\n            <th className=\"stat-col\">W</th>\r\n            <th className=\"stat-col\">L</th>\r\n            <th className=\"stat-col\">Win %</th>\r\n            <th className=\"stat-col\">GB</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedStandings.map((record, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  {record.team?.name && teamURLS[record.team.name] ? (\r\n                    <div className=\"d-flex flex-column flex-md-row align-items-start align-items-md-center\">\r\n                      <a\r\n                        href={teamURLS[record.team.name]}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                      >\r\n                        {record.team.name}\r\n                      </a>\r\n                      <Button\r\n                        variant=\"outline-light\"\r\n                        className=\"mt-2 mt-md-0 ms-md-auto\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          const teamId = record.team?.id;\r\n                          if (!teamId) {\r\n                            console.error(\r\n                              \"Team ID not available for:\",\r\n                              record.team?.name\r\n                            );\r\n                            return;\r\n                          }\r\n                          navigate(`/team/${teamId}`);\r\n                        }}\r\n                      >\r\n                        Stats\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    record.team?.name || \"N/A\"\r\n                  )}\r\n                </td>\r\n                <td>{record.wins || \"N/A\"}</td>\r\n                <td>{record.losses || \"N/A\"}</td>\r\n                <td>{record.winningPercentage || \"N/A\"}</td>\r\n                <td>{record.gamesBack || \"N/A\"}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderDivisionStandings = (divisionName, standings) => {\r\n    const divisionStandings = getDivisionStandings(standings, divisionName);\r\n\r\n    if (!divisionStandings || divisionStandings.length === 0) {\r\n      return (\r\n        <p className=\"text-center text-white\">\r\n          No standings data available for: {divisionName}.\r\n        </p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center text-white\">{divisionName}</h4>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"Team-name\">Team</th>\r\n              <th className=\"stat-col\">W</th>\r\n              <th className=\"stat-col\">L</th>\r\n              <th className=\"stat-col\">Win %</th>\r\n              <th className=\"stat-col\">GB</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {divisionStandings.map((record, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  {record.team?.name && teamURLS[record.team.name] ? (\r\n                    <div className=\"d-flex flex-column flex-md-row align-items-start align-items-md-center\">\r\n                      <a\r\n                        href={teamURLS[record.team.name]}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                      >\r\n                        {record.team.name}\r\n                      </a>\r\n                      <Button\r\n                        variant=\"outline-light\"\r\n                        className=\"mt-2 mt-md-0 ms-md-auto\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          const teamId = record.team?.id;\r\n                          if (!teamId) {\r\n                            console.error(\r\n                              \"Team ID not available for:\",\r\n                              record.team?.name\r\n                            );\r\n                            return;\r\n                          }\r\n                          navigate(`/team/${teamId}`);\r\n                        }}\r\n                      >\r\n                        Stats\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    record.team?.name || \"N/A\"\r\n                  )}\r\n                </td>\r\n                <td>{record.wins || \"N/A\"}</td>\r\n                <td>{record.losses || \"N/A\"}</td>\r\n                <td>{record.winningPercentage || \"N/A\"}</td>\r\n                <td>{record.gamesBack || \"N/A\"}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <hr className=\"text-white\" />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center text-white\">MLB 2025 Standings</h2>\r\n\r\n      <Dropdown className=\"mb-4 text-center\">\r\n        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" className=\"mt-5\">\r\n          {view === \"League\" ? \"League Standings\" : \"Division Standings\"}\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={() => handleSetView(\"League\")}>\r\n            League Standings\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={() => handleSetView(\"Division\")}>\r\n            Division Standings\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {view === \"League\" ? (\r\n        <>\r\n          {/* League Standings */}\r\n          <div className=\"card shadow-sm mb-4\">\r\n            <div className=\"card-body\">\r\n              <h3 className=\"text-center text-white\">American League (AL)</h3>\r\n              {renderLeagueTable(alStandings)}\r\n            </div>\r\n          </div>\r\n          <div className=\"card shadow-sm\">\r\n            <div className=\"card-body\">\r\n              <h3 className=\"text-center text-white\">National League (NL)</h3>\r\n              {renderLeagueTable(nlStandings)}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* Division Standings */}\r\n          <div className=\"card shadow-sm mb-4\">\r\n            <div className=\"card-body\">\r\n              {renderDivisionStandings(\"AL Central\", alStandings)}\r\n              {renderDivisionStandings(\"AL East\", alStandings)}\r\n              {renderDivisionStandings(\"AL West\", alStandings)}\r\n              {renderDivisionStandings(\"NL Central\", nlStandings)}\r\n              {renderDivisionStandings(\"NL East\", nlStandings)}\r\n              {renderDivisionStandings(\"NL West\", nlStandings)}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Standings;\r\n"],"names":["teamURLS","divisionTeams","Standings","navigate","useNavigate","alStandings","setALStandings","useState","nlStandings","setNLStandings","view","setView","localStorage","getItem","loading","setLoading","useEffect","async","response","axios","get","data","records","nlResponse","error","console","fetchStandings","handleSetView","newView","setItem","renderLeagueTable","standings","sortedStandings","flatMap","division","Array","isArray","teamRecords","warn","sort","a","b","parseFloat","winningPercentage","sortLeagueStandings","length","_jsxs","Table","striped","bordered","hover","responsive","children","_jsx","className","map","record","index","_record$team","_record$team4","team","name","href","target","rel","style","textDecoration","color","Button","variant","size","onClick","_record$team2","teamId","id","_record$team3","wins","losses","gamesBack","renderDivisionStandings","divisionName","divisionStandings","getDivisionStandings","teamsInDivision","filter","teamRecord","_teamRecord$team","includes","_record$team5","_record$team8","_record$team6","_record$team7","Dropdown","Toggle","Menu","Item","_Fragment"],"sourceRoot":""}